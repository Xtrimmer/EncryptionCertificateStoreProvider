//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Xtrimmer.KeyStoreProvider.Certificate.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Xtrimmer.KeyStoreProvider.Certificate.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Certificate with thumbprint &apos;{0}&apos; not found in certificate store &apos;{1}&apos; in certificate location &apos;{2}&apos;;. Verify the certificate path in the key encryption key definition is correct, and the certificate has been imported correctly into the certificate location/store..
        /// </summary>
        internal static string CertificateNotFound {
            get {
                return ResourceManager.GetString("CertificateNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The key encryption key Id exceeds the maximum length of {0}..
        /// </summary>
        internal static string CertificatePathLengthTooLong {
            get {
                return ResourceManager.GetString("CertificatePathLengthTooLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The certificate path should only contain 3 parts..
        /// </summary>
        internal static string CertificatePathPartsExceedsThree {
            get {
                return ResourceManager.GetString("CertificatePathPartsExceedsThree", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Certificate specified in key path {0} does not have a private key to decrypt a column encryption key. Verify the certificate is imported correctly..
        /// </summary>
        internal static string CertificateWithoutPrivateKey {
            get {
                return ResourceManager.GetString("CertificateWithoutPrivateKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The parameter {0} cannot be empty..
        /// </summary>
        internal static string EmptySequence {
            get {
                return ResourceManager.GetString("EmptySequence", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified encrypted data encryption key signature does not match the signature computed with the key encryption key (asymmetric key) in &apos;{0}&apos;. The encrypted data encryption key may be corrupt, or the specified path may be incorrect..
        /// </summary>
        internal static string InvalidSignature {
            get {
                return ResourceManager.GetString("InvalidSignature", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified encrypted data encryption key contains an invalid encryption algorithm version..
        /// </summary>
        internal static string InvalidVersionByte {
            get {
                return ResourceManager.GetString("InvalidVersionByte", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One of more of the elements in {0} is null or empty or consist of only whitespace..
        /// </summary>
        internal static string NotNullOrWhitespaceForEach {
            get {
                return ResourceManager.GetString("NotNullOrWhitespaceForEach", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} [{1}].
        /// </summary>
        internal static string NullArgument {
            get {
                return ResourceManager.GetString("NullArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} cannot be null or empty or consist of only whitespace..
        /// </summary>
        internal static string NullOrWhitespaceString {
            get {
                return ResourceManager.GetString("NullOrWhitespaceString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} must contain at least {1} elements..
        /// </summary>
        internal static string SequenceGreaterThanSize {
            get {
                return ResourceManager.GetString("SequenceGreaterThanSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified encrypted data encryption key&apos;s ciphertext length: {0} does not match the ciphertext length: {1} when using the key encryption key (certificate) in &apos;{2}&apos;. The encrypted data encryption key may be corrupt, or the specified certificate path may be incorrect..
        /// </summary>
        internal static string UnexpectedCiphertextLength {
            get {
                return ResourceManager.GetString("UnexpectedCiphertextLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified encrypted data encryption key&apos;s signature length: {0} does not match the signature length: {1} when using the key encryption key (certificate) in &apos;{2}&apos;. The encrypted data encryption key may be corrupt, or the specified certificate path may be incorrect..
        /// </summary>
        internal static string UnexpectedSignatureLength {
            get {
                return ResourceManager.GetString("UnexpectedSignatureLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The certificate path contains an unsupported certificate store location..
        /// </summary>
        internal static string UnsupportedCertificateStoreLocation {
            get {
                return ResourceManager.GetString("UnsupportedCertificateStoreLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The certificate path contains an unsupported certificate store name..
        /// </summary>
        internal static string UnsupportedCertificateStoreName {
            get {
                return ResourceManager.GetString("UnsupportedCertificateStoreName", resourceCulture);
            }
        }
    }
}
